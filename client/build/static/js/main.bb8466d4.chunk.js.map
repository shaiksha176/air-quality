{"version":3,"sources":["components/Navbar.js","pages/Container/Container.js","pages/Weather/Weather.js","pages/Air/Air.js","components/Footer.js","pages/Air/AirCity.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Container","history","useHistory","onClick","push","src","alt","Weather","useState","icon","setIcon","time","summary","latitude","longitude","temperature","apparentTemperature","dewPoint","humidity","pressure","windSpeed","windGust","windBearing","cloudCover","uvIndex","visibility","ozone","weather","setWeather","fetchData","a","axios","get","data","console","log","lat","lng","useEffect","interval","setInterval","clearInterval","houv","title","value","toFixed","tad","wind","uni","humanDateFormat","Date","toLocaleString","convertTimestamptoTime","map","ho","index","w","t","Air","category","pollutant","concentration","placeName","city","updatedAt","aqi","aqiInfo","setAqiInfo","CO","NO","pm10","pm25","so","gases","setGases","stations","AQI","NO2","OZONE","PM10","PM25","SO2","gaseous","slice","id","gas","i","Footer","setCity","fetchDataByCity","length","division","type","placeholder","onChange","e","target","App","path","exact","component","AirCity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb8466d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <div className=\"logo\">W&A</div>\r\n      <div className=\"nav-links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/aqi\">Air</Link>\r\n        <Link to=\"/weather\">Weather</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./Container.css\";\r\nimport { useHistory } from \"react-router\";\r\nconst Container = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left\">\r\n        <p className=\"title\">Weather & Air</p>\r\n        <p className=\"sub-title\">Forecast</p>\r\n        <p>\r\n          <button className=\"faq\" onClick={() => history.push(\"aqi-by-city\")}>\r\n            FInd Air Quality of your fav city here\r\n          </button>\r\n        </p>\r\n      </div>\r\n      <div className=\"right\">\r\n        <img src=\"./jack-finnigan-H8HvioFXi60-unsplash.jpg\" alt=\"weather\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Weather.css\";\r\nimport axios from \"axios\";\r\nconst Weather = () => {\r\n  const [icon, setIcon] = useState(\r\n    \"https://assetambee.s3-us-west-2.amazonaws.com/weatherIcons/PNG/cloudy.png\"\r\n  );\r\n  const [weather, setWeather] = useState({\r\n    time: 2754846,\r\n    summary: \"Cloudy\",\r\n    latitude: 21.458,\r\n    longitude: 25.54795,\r\n    temperature: 72.2,\r\n    apparentTemperature: 72.256,\r\n    dewPoint: 10,\r\n    humidity: 50,\r\n    pressure: 2.0,\r\n    windSpeed: 0.54,\r\n    windGust: 0.5,\r\n    windBearing: 10,\r\n    cloudCover: 10,\r\n    uvIndex: 50,\r\n    visibility: 80,\r\n    ozone: 250,\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/api/weather/latest`);\r\n      console.log(data.icon);\r\n      setIcon(data.icon);\r\n      setWeather({\r\n        time: data.weather.data.time,\r\n        summary: data.weather.data.summary,\r\n        latitude: data.weather.data.lat,\r\n        longitude: data.weather.data.lng,\r\n        temperature: data.weather.data.temperature,\r\n        dewPoint: data.weather.data.dewPoint,\r\n        humidity: data.weather.data.humidity,\r\n        pressure: data.weather.data.pressure,\r\n        windSpeed: data.weather.data.windSpeed,\r\n        windGust: data.weather.data.windGust,\r\n        windBearing: data.weather.data.windBearing,\r\n        cloudCover: data.weather.data.cloudCover,\r\n        uvIndex: data.weather.data.uvIndex,\r\n        visibility: data.weather.data.visibility,\r\n        ozone: data.weather.data.ozone,\r\n        apparentTemperature: data.weather.data.apparentTemperature,\r\n      });\r\n\r\n      console.log(weather);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 1000 * 60 * 5);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  function convertTimestamptoTime(uni) {\r\n    const unixTimestamp = uni;\r\n\r\n    const milliseconds = unixTimestamp * 1000; // 1575909015000\r\n\r\n    const dateObject = new Date(milliseconds);\r\n\r\n    const humanDateFormat = dateObject.toLocaleString();\r\n    console.log(humanDateFormat);\r\n    return humanDateFormat;\r\n  }\r\n  // convertTimestamptoTime();\r\n\r\n  //Humidity, ozone,uvindex,visibility\r\n  const houv = [\r\n    {\r\n      title: \"Latitude\",\r\n      value: weather.latitude.toFixed(2),\r\n    },\r\n    {\r\n      title: \"Longitude\",\r\n      value: weather.longitude.toFixed(2),\r\n    },\r\n    {\r\n      title: \"Humidity\",\r\n      value: weather.humidity,\r\n    },\r\n    {\r\n      title: \"Ozone\",\r\n      value: weather.ozone,\r\n    },\r\n    {\r\n      title: \"UV Index\",\r\n      value: weather.uvIndex,\r\n    },\r\n    {\r\n      title: \"Visibility\",\r\n      value: weather.visibility,\r\n    },\r\n  ];\r\n\r\n  //temperature, apparent temperature, dew point\r\n  const tad = [\r\n    {\r\n      title: \"Temperature\",\r\n      value: weather.temperature.toFixed(1),\r\n    },\r\n    {\r\n      title: \"Apparent Temperature\",\r\n      value: weather.apparentTemperature.toFixed(1),\r\n    },\r\n    {\r\n      title: \"Dew Point\",\r\n      value: weather.dewPoint,\r\n    },\r\n  ];\r\n\r\n  //wind gust, wind speed\r\n\r\n  const wind = [\r\n    {\r\n      title: \"Wind Gust\",\r\n      value: weather.windGust,\r\n    },\r\n    {\r\n      title: \"Wind Speed\",\r\n      value: weather.windSpeed,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"weather-container\">\r\n        <p className=\"title\">Current Weather</p>\r\n        <div className=\"time\">\r\n          <p className=\"summary\">\r\n            Fetched at : {convertTimestamptoTime(weather.time)}\r\n          </p>\r\n        </div>\r\n        <div className=\"weather-summary\">\r\n          <div className=\"icon\">\r\n            <img src={icon} alt=\"\" />\r\n          </div>\r\n          <div className=\"summary\">{weather.summary}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        {houv.map((ho, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <div className=\"card-head\">{ho.title}</div>\r\n            <div className=\"card-body\">{ho.value}</div>\r\n          </div>\r\n        ))}\r\n        <div className=\"card\">\r\n          <div className=\"card-head\">Wind Bearing</div>\r\n          <div className=\"card-body\">\r\n            {weather.windBearing} <sup>0</sup>North\r\n          </div>\r\n        </div>\r\n        {wind.map((w, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <div className=\"card-head\">{w.title}</div>\r\n            <div className=\"card-body\">{w.value} miles/hour</div>\r\n          </div>\r\n        ))}\r\n\r\n        {tad.map((t, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <div className=\"card-head\">{t.title}</div>\r\n            <div className=\"card-body\">\r\n              {t.value} <sup>0</sup>F\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Air.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Air = () => {\r\n  const history = useHistory();\r\n  const [aqiInfo, setAqiInfo] = useState({\r\n    category: \"Moderate\",\r\n    pollutant: \"PM10\",\r\n    concentration: 59.913,\r\n    placeName: \"Race Course\",\r\n    city: \"Bangalore\",\r\n    updatedAt: \"2021-9-9\",\r\n    aqi: 52,\r\n  });\r\n\r\n  const [gases, setGases] = useState({\r\n    CO: 0.593,\r\n    NO: 25,\r\n    ozone: 21,\r\n    pm10: 59.913,\r\n    pm25: 11.466,\r\n    so: 2.21,\r\n  });\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/api/aqi/latest\");\r\n      console.log(data.stations[0]);\r\n      setAqiInfo({\r\n        category: data.stations[0].aqiInfo.category,\r\n        pollutant: data.stations[0].aqiInfo.pollutant,\r\n        concentration: data.stations[0].aqiInfo.concentration,\r\n        placeName: data.stations[0].placeName,\r\n        city: data.stations[0].city,\r\n        updatedAt: data.stations[0].updatedAt,\r\n        aqi: data.stations[0].AQI,\r\n      });\r\n      setGases({\r\n        CO: data.stations[0].CO,\r\n        NO: data.stations[0].NO2,\r\n        ozone: data.stations[0].OZONE,\r\n        pm10: data.stations[0].PM10,\r\n        pm25: data.stations[0].PM25,\r\n        so: data.stations[0].SO2,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchData();\r\n    }, 1000 * 60 * 5);\r\n    return () => clearInterval(interval);\r\n  });\r\n  const gaseous = [\r\n    {\r\n      title: \"CO\",\r\n      value: gases.CO + \"ppm\",\r\n    },\r\n    {\r\n      title: \"Ozone\",\r\n      value: gases.ozone + \"ppb\",\r\n    },\r\n    {\r\n      title: \"PM10\",\r\n      value: gases.pm10 + \"ug/m3\",\r\n    },\r\n    {\r\n      title: \"PM25\",\r\n      value: gases.pm25 + \"ug/m3\",\r\n    },\r\n  ];\r\n  const aqi = [\r\n    {\r\n      title: \"Pollutant\",\r\n      value: aqiInfo.pollutant,\r\n    },\r\n    {\r\n      title: \"Concentration\",\r\n      value: aqiInfo.concentration,\r\n    },\r\n    {\r\n      title: \"Category\",\r\n      value: aqiInfo.category,\r\n    },\r\n    {\r\n      title: \"Updated at\",\r\n      value: aqiInfo.updatedAt.slice(0, 10),\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"air-container\">\r\n      <p className=\"title\">Air Quality </p>\r\n      <div id=\"btn-container\">\r\n        <button onClick={() => history.push(\"/aqi-by-city\")}>\r\n          search aqi by city\r\n        </button>\r\n        <button onClick={fetchData}>Fetch DATA</button>\r\n      </div>\r\n\r\n      <div className=\"inner-container\">\r\n        <div className=\"aqiInfo\">\r\n          <p>{aqiInfo.aqi}</p>\r\n          <p>\r\n            {aqiInfo.placeName}, {aqiInfo.city}\r\n          </p>\r\n          {aqi.map((a, index) => (\r\n            <p key={index}>\r\n              {a.title} : {a.value}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"stations\">\r\n          {gaseous.map((gas, i) => (\r\n            <p key={i}>\r\n              {gas.title} : {gas.value}\r\n            </p>\r\n          ))}\r\n          <p>\r\n            NO <sub>2</sub>: {gases.NO} ppb{\" \"}\r\n          </p>\r\n          <p>\r\n            SO <sub>2</sub> : {gases.so} ppb\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Air;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nconst Footer = () => {\r\n  return <footer>Developed by : Shaiksha Vali</footer>;\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Air.css\";\r\nconst Air = () => {\r\n  const [aqiInfo, setAqiInfo] = useState({\r\n    category: \"Moderate\",\r\n    pollutant: \"PM10\",\r\n    concentration: 59.913,\r\n    placeName: \"Race Course\",\r\n    city: \"Bangalore\",\r\n    updatedAt: \"2021-9-9\",\r\n    aqi: 52,\r\n  });\r\n  const [city, setCity] = useState(\"\");\r\n  const [gases, setGases] = useState({\r\n    CO: 0.593,\r\n    NO: 25,\r\n    ozone: 21,\r\n    pm10: 59.913,\r\n    pm25: 11.466,\r\n    so: 2.21,\r\n  });\r\n\r\n  const fetchDataByCity = async (city) => {\r\n    try {\r\n      const { data } = await axios.get(`/api/aqi/latest/:${city}`);\r\n      console.log(data.stations[0]);\r\n      setAqiInfo({\r\n        category: data.stations[0].aqiInfo.category,\r\n        pollutant: data.stations[0].aqiInfo.pollutant,\r\n        concentration: data.stations[0].aqiInfo.concentration,\r\n        placeName: data.stations[0].placeName,\r\n        city:\r\n          data.stations[0].city.length > 0\r\n            ? data.stations[0].city\r\n            : data.stations[0].division,\r\n        updatedAt: data.stations[0].updatedAt,\r\n        aqi: data.stations[0].AQI,\r\n      });\r\n      setGases({\r\n        CO: data.stations[0].CO,\r\n        NO: data.stations[0].NO2,\r\n        ozone: data.stations[0].OZONE,\r\n        pm10: data.stations[0].PM10,\r\n        pm25: data.stations[0].PM25,\r\n        so: data.stations[0].SO2,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlesearch = () => {\r\n    //  console.log(city);\r\n    fetchDataByCity(city);\r\n    setCity(\"\");\r\n  };\r\n  const gaseous = [\r\n    {\r\n      title: \"CO\",\r\n      value: gases.CO + \"ppm\",\r\n    },\r\n    {\r\n      title: \"Ozone\",\r\n      value: gases.ozone + \"ppb\",\r\n    },\r\n    {\r\n      title: \"PM10\",\r\n      value: gases.pm10 + \"ug/m3\",\r\n    },\r\n    {\r\n      title: \"PM25\",\r\n      value: gases.pm25 + \"ug/m3\",\r\n    },\r\n  ];\r\n  const aqi = [\r\n    {\r\n      title: \"Pollutant\",\r\n      value: aqiInfo.pollutant,\r\n    },\r\n    {\r\n      title: \"Concentration\",\r\n      value: aqiInfo.concentration,\r\n    },\r\n    {\r\n      title: \"Category\",\r\n      value: aqiInfo.category,\r\n    },\r\n    {\r\n      title: \"Updated at\",\r\n      value: aqiInfo.updatedAt.slice(0, 10),\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"air-container\">\r\n      <p className=\"title\">Search AQI by City </p>\r\n\r\n      <Link to=\"/aqi\">GO BACK</Link>\r\n\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter city name e.g. Bangalore\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <button onClick={handlesearch}>search</button>\r\n      </div>\r\n      <div className=\"inner-container\">\r\n        <div className=\"aqiInfo\">\r\n          <p>{aqiInfo.aqi}</p>\r\n          <p>\r\n            {aqiInfo.placeName}, {aqiInfo.city}\r\n          </p>\r\n          {aqi.map((a, index) => (\r\n            <p key={index}>\r\n              {a.title} : {a.value}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div className=\"stations\">\r\n          {gaseous.map((gas, index) => (\r\n            <p key={index}>\r\n              {gas.title} : {gas.value}\r\n            </p>\r\n          ))}\r\n          <p>\r\n            NO <sub>2</sub>: {gases.NO} ppb{\" \"}\r\n          </p>\r\n          <p>\r\n            SO <sub>2</sub> : {gases.so} ppb\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Air;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Container from \"./pages/Container/Container\";\nimport Weather from \"./pages/Weather/Weather\";\nimport Air from \"./pages/Air/Air\";\nimport Footer from \"./components/Footer\";\nimport AirCity from \"./pages/Air/AirCity\";\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Container} />\n        <Route path=\"/weather\" exact component={Weather} />\n        <Route path=\"/aqi\" exact component={Air} />\n        <Route path=\"/aqi-by-city\" exact component={AirCity} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}